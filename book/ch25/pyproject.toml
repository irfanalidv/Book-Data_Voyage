[build-system]
requires = ["setuptools>=65", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "datascience_toolkit"
version = "0.1.0"
description = "A comprehensive toolkit for data science workflows"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Data Scientist", email = "author@example.com"}
]
maintainers = [
    {name = "Data Scientist", email = "author@example.com"}
]
keywords = [
    "data-science",
    "machine-learning", 
    "statistics",
    "data-analysis",
    "visualization",
    "pandas",
    "numpy",
    "scikit-learn",
    "matplotlib"
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Libraries :: Application Frameworks"
]
requires-python = ">=3.8"
dependencies = [
    "numpy>=1.21.0",
    "pandas>=1.3.0",
    "matplotlib>=3.4.0",
    "scikit-learn>=1.0.0",
    "scipy>=1.7.0",
    "click>=8.0.0",
    "rich>=13.0.0",
    "tqdm>=4.64.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "invoke>=2.0.0"
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "coverage>=7.0.0"
]
docs = [
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=1.0.0"
]
all = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-mock>=3.10.0",
    "pytest-xdist>=3.0.0",
    "coverage>=7.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "mypy>=1.0.0",
    "isort>=5.12.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
    "pre-commit>=3.0.0",
    "tox>=4.0.0",
    "invoke>=2.0.0",
    "sphinx>=6.0.0",
    "sphinx-rtd-theme>=1.2.0",
    "sphinx-autodoc-typehints>=1.19.0",
    "myst-parser>=1.0.0"
]

[project.urls]
Homepage = "https://github.com/username/datascience_toolkit"
Repository = "https://github.com/username/datascience_toolkit.git"
Documentation = "https://datascience_toolkit.readthedocs.io"
"Bug Tracker" = "https://github.com/username/datascience_toolkit/issues"
"Source Code" = "https://github.com/username/datascience_toolkit"
"Download" = "https://github.com/username/datascience_toolkit/archive/v0.1.0.tar.gz"

[project.scripts]
datascience-toolkit = "datascience_toolkit.cli:main"

[project.gui-scripts]
datascience-toolkit-gui = "datascience_toolkit.gui:main"

[tool.setuptools]
packages = ["datascience_toolkit"]
include-package-data = true
zip-safe = false

[tool.setuptools.package-data]
"datascience_toolkit" = [
    "*.txt",
    "*.md", 
    "*.yml",
    "*.yaml",
    "data/*",
    "config/*"
]

[tool.setuptools.dynamic]
version = {attr = "datascience_toolkit.__version__"}

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["datascience_toolkit"]
known_third_party = ["numpy", "pandas", "matplotlib", "scikit-learn", "scipy"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--cov=datascience_toolkit",
    "--cov-report=html",
    "--cov-report=term-missing",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning"
]

[tool.coverage.run]
source = ["datascience_toolkit"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod"
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.mypy-pandas.*]
ignore_missing_imports = true

[tool.mypy-numpy.*]
ignore_missing_imports = true

[tool.mypy-matplotlib.*]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "docs"]
skips = ["B101", "B601"]

[tool.safety]
output = "json"
